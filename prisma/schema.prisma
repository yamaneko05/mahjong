// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id             String          @id @default(uuid())
  name           String
  createdAt      DateTime        @default(now())
  sections       Section[]
  gameResults    GameResult[]
  sectionResults SectionResult[]
}

model Section {
  id             String          @id @default(uuid())
  date           DateTime
  createdAt      DateTime        @default(now())
  startingPoints Int
  rateId         String
  rate           Rate            @relation(fields: [rateId], references: [id])
  players        Player[]
  games          Game[]
  sectionResults SectionResult[]
}

model Game {
  id          String       @id @default(uuid())
  sectionId   String
  createdAt   DateTime     @default(now())
  section     Section      @relation(fields: [sectionId], references: [id])
  gameResults GameResult[]
}

model GameResult {
  id       String @id @default(uuid())
  gameId   String
  playerId String
  points   Int
  game     Game   @relation(fields: [gameId], references: [id])
  player   Player @relation(fields: [playerId], references: [id])
}

model SectionResult {
  id        String  @id @default(uuid())
  sectionId String
  playerId  String
  result    Int
  section   Section @relation(fields: [sectionId], references: [id])
  player    Player  @relation(fields: [playerId], references: [id])
}

model Rate {
  id      String    @id @default(uuid())
  name    String
  rate    Float
  Section Section[]
}
